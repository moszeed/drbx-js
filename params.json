{"name":"drbx-js","tagline":"a promise wrapper for the (un)official dropbox.js","body":"# drbx-js\r\n\r\n[![Join the chat at https://gitter.im/moszeed/drbx-js](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/moszeed/drbx-js?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\na promise wrapper for the (un)official dropbox.js\r\n\r\n#### project targets\r\n- promises for most used functions\r\n- compatibility with browserify\r\n- less coffescript\r\n\r\n## modifiedDropboxBuild\r\ndrbx-js uses a modified dropbox.js file, with fixed browserify/nodejs handling  \r\nuntil this get merged: https://github.com/dropbox/dropbox-js/pull/183\r\n\r\n## how to use\r\ninstall from npm\r\n\r\n\tnpm i drbx-js\r\n\r\n## available methods\r\n#### authentication\r\nthese methods are used for initializing and connection to dropbox\r\n##### *Drbx.init*\r\n##### *Drbx.login*\r\n\r\n#### save urls to dropbox\r\n##### *Drbx.saveUrl*  \r\n**params** url, path_in_dropbox)  \r\n**response** Object containing: status, jobid  \r\n\r\n##### *Drbx.saveUrlJob*  \r\n**params** jobid  \r\n**response** Object containing: status, error (on error status)  \r\n\r\n\r\n#### dir, file methods\r\nfollowing function have matching parameters with the Dropbox Core HTTP API  \r\nand the (un)official dropbox js api, more info can be found here:  \r\nhttps://github.com/dropbox/dropbox-js/blob/stable/src/client.coffee  \r\nhttps://www.dropbox.com/developers/core/docs  \r\n\r\n##### *Drbx.accountInfo*\r\n##### *Drbx.metadata*\r\n##### *Drbx.readdir*\r\n##### *Drbx.delta*\r\n##### *Drbx.search*\r\n##### *Drbx.writeFile*\r\n##### *Drbx.readFile*\r\n##### *Drbx.remove*\r\n##### *Drbx.copy*\r\n##### *Drbx.fileopsDelete*\r\n##### *Drbx.fileopsCopy*\r\n\r\n## usage examples\r\n##### init, with popup driver and login\r\n\r\n    var Drbx = require('../src/drbx.js');\r\n        Drbx.init({\r\n            client  : { key : [Dropbox API Key] },\r\n            auth    : new Drbx.Dropbox.AuthDriver.Popup({\r\n                receiverUrl     : [receiverUrl],\r\n                rememberUser    : true\r\n            })\r\n        });\r\n\r\n        Drbx.login()\r\n            .then(function isLoggedIn() {\r\n                console.log('user is logged in');\r\n            })\r\n            .catch(function(err) {\r\n                console.log(err);\r\n            });\r\n\r\n\r\n##### get accountInfo\r\n    Drbx.accountInfo()\r\n        .then(function getUserData(userData) {\r\n        \tconsole.log(userData);\r\n        })\r\n        .catch(function(err) {\r\n        \tconsole.log(err);\r\n        });\r\n\r\n\r\n##### save by a given url\r\n    Drbx.saveUrl('http://url-to-someting', '/path/in/dropbox')\r\n        .then(function saveUrlResponse(metadata) {\r\n        \tconsole.log(metadata);\r\n        })\r\n        .catch(function(err) {\r\n        \tconsole.log(err);\r\n        });\r\n\r\n\r\n##### read root dir\r\n    Drbx.readdir('/')\r\n        .then(function getRootDirData(folderMetaData) {\r\n        \tconsole.log(folderMetaData);\r\n        })\r\n        .catch(function(err) {\r\n        \tconsole.log(err);\r\n        });\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}